version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/backend.dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_ecosystem
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_ecosystem
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Run tests
      run: |
        cd backend
        pytest
name: Frontend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Run tests
      run: |
        cd frontend
        npm run test:unit
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/backend.dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_ecosystem
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_ecosystem
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:
